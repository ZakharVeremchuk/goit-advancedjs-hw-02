{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from \"izitoast\";\n\n\nconst startButton = document.querySelector('button[data-start]');\nconst inputDate = document.getElementById('datetime-picker');\nconst days = document.querySelector('span[data-days]');\nconst hours = document.querySelector('span[data-hours]');\nconst minutes = document.querySelector('span[data-minutes]');\nconst seconds = document.querySelector('span[data-seconds]');\nlet userSelectedDate;\n\nstartButton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (selectedDates[0] <= new Date()) {\n        iziToast.error({\n            message: 'Please choose a date in the future',\n            position: 'topRight'\n        });\n    } else {\n        startButton.disabled = false;\n        startButton.addEventListener('click', start)\n    }\n  },\n};\n\nconst flatpickrInstance = flatpickr(inputDate, options);\n\nfunction start() {\n    let timerId = setInterval(() => {\n        const diff = userSelectedDate - new Date();\n        const { days: d, hours: h, minutes: m, seconds: s } = convertMs(diff);\n\n        if (diff <= 0) {\n            clearInterval(timerId);\n            return;\n        }\n        \n        days.textContent = String(d).padStart(2, '0');\n        hours.textContent = String(h).padStart(2, '0');\n        minutes.textContent = String(m).padStart(2, '0');\n        seconds.textContent = String(s).padStart(2, '0');\n    }, 1000);\n\n    startButton.disabled = true;\n\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n\n\n"],"names":["startButton","inputDate","days","hours","minutes","seconds","userSelectedDate","options","selectedDates","iziToast","start","flatpickr","timerId","diff","d","h","m","s","convertMs","ms"],"mappings":"+IAIA,MAAMA,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAY,SAAS,eAAe,iBAAiB,EACrDC,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAU,SAAS,cAAc,oBAAoB,EACrDC,EAAU,SAAS,cAAc,oBAAoB,EAC3D,IAAIC,EAEJN,EAAY,SAAW,GAEvB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAC9BA,EAAc,CAAC,GAAK,IAAI,KACxBC,EAAS,MAAM,CACX,QAAS,qCACT,SAAU,UACtB,CAAS,GAEDT,EAAY,SAAW,GACvBA,EAAY,iBAAiB,QAASU,CAAK,EAEhD,CACH,EAE0BC,EAAUV,EAAWM,CAAO,EAEtD,SAASG,GAAQ,CACb,IAAIE,EAAU,YAAY,IAAM,CAC5B,MAAMC,EAAOP,EAAmB,IAAI,KAC9B,CAAE,KAAMQ,EAAG,MAAOC,EAAG,QAASC,EAAG,QAASC,CAAC,EAAKC,EAAUL,CAAI,EAEpE,GAAIA,GAAQ,EAAG,CACX,cAAcD,CAAO,EACrB,MACH,CAEDV,EAAK,YAAc,OAAOY,CAAC,EAAE,SAAS,EAAG,GAAG,EAC5CX,EAAM,YAAc,OAAOY,CAAC,EAAE,SAAS,EAAG,GAAG,EAC7CX,EAAQ,YAAc,OAAOY,CAAC,EAAE,SAAS,EAAG,GAAG,EAC/CX,EAAQ,YAAc,OAAOY,CAAC,EAAE,SAAS,EAAG,GAAG,CAClD,EAAE,GAAI,EAEPjB,EAAY,SAAW,EAE3B,CAEA,SAASkB,EAAUC,EAAI,CAQrB,MAAMjB,EAAO,KAAK,MAAMiB,EAAK,KAAG,EAE1BhB,EAAQ,KAAK,MAAOgB,EAAK,MAAO,IAAI,EAEpCf,EAAU,KAAK,MAAQe,EAAK,MAAO,KAAQ,GAAM,EAEjDd,EAAU,KAAK,MAASc,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAjB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}